<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>RuiyiBlog</title>
  
  <subtitle>��¼һЩ�����רҵѧϰ��֪ʶ</subtitle>
  <link href="http://ruiyi0118.github.io/atom.xml" rel="self"/>
  
  <link href="http://ruiyi0118.github.io/"/>
  <updated>2022-03-19T02:25:36.459Z</updated>
  <id>http://ruiyi0118.github.io/</id>
  
  <author>
    <name>Ruiyi</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>顺序表的实现</title>
    <link href="http://ruiyi0118.github.io/2022/03/19/SqList/"/>
    <id>http://ruiyi0118.github.io/2022/03/19/SqList/</id>
    <published>2022-03-19T02:20:52.000Z</published>
    <updated>2022-03-19T02:25:36.459Z</updated>
    
    <content type="html"><![CDATA[<p>顺序表即线性表的顺序存储结构。<span id="more"></span></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">char</span> ElemType;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MaxSize 50</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> &#123;</span><br><span class="line">ElemType data[MaxSize];</span><br><span class="line"><span class="type">int</span> length;</span><br><span class="line">&#125;SqList;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">creat</span><span class="params">(SqList *&amp; list, ElemType a[], <span class="type">int</span> n)</span> </span>&#123;  <span class="comment">//整体建立顺序表</span></span><br><span class="line">list = <span class="keyword">new</span> SqList;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">list-&gt;data[i] = a[i];</span><br><span class="line">&#125;</span><br><span class="line">list-&gt;length = n;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">(SqList *&amp; list)</span> </span>&#123;  <span class="comment">//初始化顺序表</span></span><br><span class="line">list = <span class="keyword">new</span> SqList;</span><br><span class="line">list-&gt;length = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">destroy</span><span class="params">(SqList *&amp; list)</span> </span>&#123;  <span class="comment">//销毁顺序表</span></span><br><span class="line"><span class="built_in">delete</span>(list);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">isEmpty</span><span class="params">(SqList *&amp; list)</span> </span>&#123;  <span class="comment">//判断顺序表是否为空</span></span><br><span class="line"><span class="keyword">return</span> (list-&gt;length == <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">size</span><span class="params">(SqList *&amp; list)</span> </span>&#123;  <span class="comment">//计算顺序表的长度</span></span><br><span class="line"><span class="keyword">return</span> list-&gt;length;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">(SqList *&amp; list)</span> </span>&#123;  <span class="comment">//输出顺序表中的各个元素</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; list-&gt;length; i++) &#123;</span><br><span class="line">cout &lt;&lt; list-&gt;data[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">get</span><span class="params">(SqList *&amp; list, <span class="type">int</span> i, ElemType&amp; e)</span> </span>&#123;  <span class="comment">//求顺序表中的第i个元素，并赋值给e</span></span><br><span class="line"><span class="keyword">if</span> (i &lt; <span class="number">1</span> || i &gt; list-&gt;length) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">e = list-&gt;data[i - <span class="number">1</span>];</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find</span><span class="params">(SqList *&amp; list, ElemType&amp; e)</span> </span>&#123;  <span class="comment">//找到第一个值域为e的元素序号</span></span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (i &lt; list-&gt;length&amp;&amp; list-&gt;data[i] != e)</span><br><span class="line">i++;</span><br><span class="line"><span class="keyword">if</span> (i == list-&gt;length) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> i + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">insert</span><span class="params">(SqList *&amp; list, <span class="type">int</span> i, ElemType e)</span> </span>&#123;  <span class="comment">//插入元素e</span></span><br><span class="line"><span class="keyword">if</span> (i &lt; <span class="number">1</span> || i &gt; list-&gt;length + <span class="number">1</span> || list-&gt;length == MaxSize) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">i--;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = list-&gt;length; j &gt; i; j--) &#123;</span><br><span class="line">list-&gt;data[j] = list-&gt;data[j - <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">list-&gt;data[i] = e;</span><br><span class="line">list-&gt;length++;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">del</span><span class="params">(SqList *&amp; list, <span class="type">int</span> i, ElemType e)</span> </span>&#123;  <span class="comment">//删除元素e</span></span><br><span class="line"><span class="keyword">if</span> (i &lt; <span class="number">1</span> || i &gt; list-&gt;length) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = i - <span class="number">1</span>; j &lt; list-&gt;length - <span class="number">1</span>; j++) &#123;</span><br><span class="line">list-&gt;data[j] = list-&gt;data[j + <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">list-&gt;length--;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">SqList* list;</span><br><span class="line"><span class="type">char</span> e;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;（1）初始化顺序表&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">init</span>(list);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;（2）依次插入元素a，b，c，d&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">insert</span>(list, <span class="number">1</span>, <span class="string">&#x27;a&#x27;</span>);</span><br><span class="line"><span class="built_in">insert</span>(list, <span class="number">2</span>, <span class="string">&#x27;b&#x27;</span>);</span><br><span class="line"><span class="built_in">insert</span>(list, <span class="number">3</span>, <span class="string">&#x27;c&#x27;</span>);</span><br><span class="line"><span class="built_in">insert</span>(list, <span class="number">4</span>, <span class="string">&#x27;d&#x27;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;（3）输出顺序表list：&quot;</span>;</span><br><span class="line"><span class="built_in">print</span>(list);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;（4）整体建立顺序表list2&quot;</span> &lt;&lt; endl;</span><br><span class="line">SqList* list2;</span><br><span class="line"><span class="type">char</span> a[<span class="number">4</span>] = &#123; <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;f&#x27;</span>, <span class="string">&#x27;g&#x27;</span>,<span class="string">&#x27;h&#x27;</span> &#125;;</span><br><span class="line"><span class="built_in">creat</span>(list2, a, <span class="number">4</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;（5）输出顺序表list2：&quot;</span>;</span><br><span class="line"><span class="built_in">print</span>(list2);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;（6）顺序表list的长度为：&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="built_in">size</span>(list) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;（7）顺序表list是否为空：&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="built_in">isEmpty</span>(list) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;（8）顺序表list的第三个元素为：&quot;</span>;</span><br><span class="line"><span class="built_in">get</span>(list, <span class="number">3</span>, e);</span><br><span class="line">cout &lt;&lt; e &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;（9）查找为b的元素的序号：&quot;</span>;</span><br><span class="line">e = <span class="string">&#x27;b&#x27;</span>;</span><br><span class="line">cout &lt;&lt; <span class="built_in">find</span>(list, e) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;（10）在第三个元素处插入z：&quot;</span>;</span><br><span class="line">e = <span class="string">&#x27;z&#x27;</span>;</span><br><span class="line"><span class="built_in">insert</span>(list, <span class="number">3</span>, e);</span><br><span class="line"><span class="built_in">print</span>(list);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;（11）删除第三个元素：&quot;</span>;</span><br><span class="line"><span class="built_in">del</span>(list, <span class="number">3</span>, e);</span><br><span class="line"><span class="built_in">print</span>(list);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;（12）销毁顺序表&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">destroy</span>(list);</span><br><span class="line"><span class="built_in">destroy</span>(list2);</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;顺序表即线性表的顺序存储结构。</summary>
    
    
    
    
    <category term="data structure" scheme="http://ruiyi0118.github.io/tags/data-structure/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://ruiyi0118.github.io/2022/03/16/hello-world/"/>
    <id>http://ruiyi0118.github.io/2022/03/16/hello-world/</id>
    <published>2022-03-16T14:55:10.000Z</published>
    <updated>2022-03-18T14:29:23.958Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. <span id="more"></span></p><p>If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info.</summary>
    
    
    
    
  </entry>
  
</feed>
